name: AI Code Review on Comment
on:
  issue_comment:
    types: [created]

jobs:
  ai-code-review:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '@review')
    runs-on: ubuntu-latest

    steps:
      - name: Get PR details
        id: pr-info
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            return {
              head_sha: pr.head.sha,
              head_ref: pr.head.ref,
              base_sha: pr.base.sha,
              base_ref: pr.base.ref,
              pr_number: pr.number,
              head_repo: pr.head.repo.full_name
            };

      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          repository: ${{ fromJson(steps.pr-info.outputs.result).head_repo }}
          ref: ${{ fromJson(steps.pr-info.outputs.result).head_ref }}
          fetch-depth: 0

      - name: AI Code Review Analysis
        uses: 6529-Collections/ai-code-review-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}
          max-atomic-size: "15"
        env:
          # Override GitHub context to simulate a pull_request event
          GITHUB_EVENT_NAME: "pull_request"
          GITHUB_HEAD_REF: ${{ fromJson(steps.pr-info.outputs.result).head_ref }}
          GITHUB_BASE_REF: ${{ fromJson(steps.pr-info.outputs.result).base_ref }}
          # Create a minimal pull_request context
          GITHUB_CONTEXT: |
            {
              "event_name": "pull_request",
              "payload": {
                "pull_request": {
                  "number": ${{ fromJson(steps.pr-info.outputs.result).pr_number }},
                  "head": {
                    "sha": "${{ fromJson(steps.pr-info.outputs.result).head_sha }}",
                    "ref": "${{ fromJson(steps.pr-info.outputs.result).head_ref }}"
                  },
                  "base": {
                    "sha": "${{ fromJson(steps.pr-info.outputs.result).base_sha }}",
                    "ref": "${{ fromJson(steps.pr-info.outputs.result).base_ref }}"
                  }
                }
              }
            }
