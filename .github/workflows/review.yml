name: AI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  theme-analysis:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '@review')
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return {
              head_sha: pr.head.sha,
              head_ref: pr.head.ref,
              head_repo: pr.head.repo.full_name
            };

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          repository: ${{ fromJson(steps.pr.outputs.result).head_repo }}
          ref: ${{ fromJson(steps.pr.outputs.result).head_sha }}
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: AI Code Review
        uses: 6529-Collections/ai-code-review-action@themes-init
        id: review
        with:
          anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}
        env:
          SKIP_CROSS_LEVEL_DEDUP: true

      - name: Comment PR with Analysis
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const themes = ${{ toJSON(steps.review.outputs.themes) }};
            const summary = ${{ toJSON(steps.review.outputs.summary) }};

            // Handle null/undefined outputs
            const formattedThemes = themes ? (typeof themes === 'string' ? themes.replace(/\\n/g, '\n') : JSON.stringify(themes, null, 2)) : 'No themes available';
            const formattedSummary = summary ? (typeof summary === 'string' ? summary.replace(/\\n/g, '\n') : JSON.stringify(summary, null, 2)) : 'No summary available';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ¤– AI Code Review Results
              
              **Themes:** 
              ${formattedThemes}
              
              **Summary:** ${formattedSummary}
              
              ---
              *Generated by AI Code Review Action*`
            })
