{
  "tasks": [
    {
      "id": 1,
      "title": "Create or modify constants file for MAX_DROP_UPLOAD_FILES",
      "description": "Create a new constants file or modify an existing one to define the MAX_DROP_UPLOAD_FILES constant with a value of 4.",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "details": "Create a new file at src/lib/constants/uploads.ts if it doesn't exist. If the directory structure doesn't exist, create it. If a similar constants file already exists that would be appropriate for this constant, use that instead. Define the constant as: export const MAX_DROP_UPLOAD_FILES = 4; with an appropriate comment explaining its purpose. Ensure the constant is properly exported so it can be imported by other files.",
      "testStrategy": "Verify the constant file exists, contains the MAX_DROP_UPLOAD_FILES constant with value 4, and can be imported from other files in the project."
    },
    {
      "id": 2,
      "title": "Update CreateDropActionsRow.tsx to use the constant",
      "description": "Modify the CreateDropActionsRow.tsx file to import and use the MAX_DROP_UPLOAD_FILES constant instead of the hardcoded value 4.",
      "status": "done",
      "dependencies": [
        1
      ],
      "priority": "high",
      "details": "In components/drops/create/utils/CreateDropActionsRow.tsx, add an import statement for the MAX_DROP_UPLOAD_FILES constant. Find the onChange handler for the file input element that checks 'files.length > 4' and replace the hardcoded 4 with MAX_DROP_UPLOAD_FILES. Ensure the functionality remains the same - the component should still limit uploads to 4 files and display appropriate error messages when the limit is exceeded.",
      "testStrategy": "Manually test the file upload functionality through the button to ensure it still limits uploads to 4 files and shows the correct error message when attempting to upload more than 4 files."
    },
    {
      "id": 3,
      "title": "Update CreateDropContent.tsx to use the constant",
      "description": "Modify the CreateDropContent.tsx file to import and use the MAX_DROP_UPLOAD_FILES constant instead of the hardcoded value 4.",
      "status": "done",
      "dependencies": [
        1
      ],
      "priority": "high",
      "details": "In components/waves/CreateDropContent.tsx, add an import statement for the MAX_DROP_UPLOAD_FILES constant. Find the handleFileChange function that checks 'updatedFiles.length > 4' and replace the hardcoded 4 with MAX_DROP_UPLOAD_FILES. Also find any instances where the array is sliced using '-4' and replace with `-MAX_DROP_UPLOAD_FILES`. Ensure the functionality remains the same - the component should still limit uploads to 4 files and handle array slicing correctly.",
      "testStrategy": "Manually test the drag-and-drop file upload functionality to ensure it still limits uploads to 4 files, shows the correct error message when attempting to upload more than 4 files, and correctly handles array slicing."
    },
    {
      "id": 4,
      "title": "Perform integration testing of file upload functionality",
      "description": "Test the complete file upload functionality to ensure both upload methods (button and drag-and-drop) correctly enforce the limit using the new constant.",
      "status": "done",
      "dependencies": [
        2,
        3
      ],
      "priority": "medium",
      "details": "Test both file upload methods (button in CreateDropActionsRow.tsx and drag-and-drop in CreateDropContent.tsx) to ensure they correctly enforce the 4-file limit. Verify that appropriate error messages are displayed when attempting to upload more than 4 files. Test edge cases such as uploading exactly 4 files, uploading 0 files, and attempting to upload more than 4 files in various sequences.",
      "testStrategy": "Create a test plan covering all upload scenarios: uploading 1-4 files via button, uploading 1-4 files via drag-and-drop, attempting to upload 5+ files via both methods, uploading files in multiple batches that would exceed the limit. Verify correct behavior and error messages in each case."
    },
    {
      "id": 5,
      "title": "Document the constant and update code comments",
      "description": "Add appropriate documentation for the new constant and update any relevant code comments in the modified files.",
      "status": "done",
      "dependencies": [
        1,
        2,
        3
      ],
      "priority": "low",
      "details": "Add a descriptive comment above the MAX_DROP_UPLOAD_FILES constant explaining its purpose and usage. Update any comments in CreateDropActionsRow.tsx and CreateDropContent.tsx that reference the file limit to mention the constant instead of the hardcoded value. If there's a project documentation file or wiki, consider adding a note about this constant for future developers. Ensure code comments accurately reflect the changes made and provide context for why the constant exists.",
      "testStrategy": "Review the documentation and comments for clarity, accuracy, and completeness. Ensure they provide sufficient context for future developers to understand the purpose and usage of the constant."
    }
  ],
  "metadata": {
    "projectName": "Centralize Drop Image Upload Limit",
    "totalTasks": 5,
    "sourceFile": "/Users/simo/6529seize-frontend/centralize_limit_prd.txt",
    "generatedAt": "2023-11-09"
  }
}