import {
  CommunityMemberOverview,
  CIC_TO_TEXT,
} from "../../../entities/IProfile";
import {
  formatNumberWithCommasOrDash,
  cicToType,
} from "../../../helpers/Helpers";
import UserLevel from "../../user/utils/level/UserLevel";
import Tippy from "@tippyjs/react";
import UserCICTypeIcon from "../../user/utils/user-cic-type/UserCICTypeIcon";
import {
  isEthereumAddress,
  isAutoGeneratedHandle,
} from "../../../helpers/AllowlistToolHelpers";
import { ImageScale, getScaledImageUri } from "../../../helpers/image.helpers";
import CommonTimeAgo from "../../utils/CommonTimeAgo";
import Link from "next/link";

export default function CommunityMembersMobileCard({
  member,
  rank,
}: {
  readonly member: CommunityMemberOverview;
  readonly rank: number;
}) {
  const isNotProfile = isEthereumAddress(member.detail_view_key);
  const isProfile = !isNotProfile;
  const textColorClass = isProfile ? "tw-text-iron-50" : "tw-text-iron-400";
  const path = `/${member.detail_view_key}`;

  return (
    <Link
      href={path}
      className="tw-flex tw-flex-col tw-gap-y-1 tw-py-3 tw-pl-3 tw-pr-4 tw-rounded-xl tw-ring-1 tw-ring-inset tw-ring-white/[0.15] tw-bg-iron-900/80 active:tw-bg-iron-700 tw-transition-colors tw-duration-200 tw-no-underline tw-overflow-hidden"
    >
      <div className="tw-flex tw-items-center tw-gap-x-3">
        <div className="tw-flex tw-items-center tw-gap-x-2 tw-flex-shrink-0">
          <span className="tw-text-iron-400 tw-text-xxs tw-w-6">#{rank}</span>
          <div className="tw-flex-shrink-0 tw-h-10 tw-w-10 tw-rounded-md tw-overflow-hidden tw-ring-1 tw-ring-inset tw-ring-white/10 tw-bg-iron-900 tw-flex tw-items-center tw-justify-center">
            {member.pfp && (
              <img
                src={getScaledImageUri(member.pfp, ImageScale.W_AUTO_H_50)}
                alt={`${member.display} avatar`}
                className="tw-h-full tw-w-full tw-object-contain tw-mx-auto"
              />
            )}
          </div>
        </div>

        <div className="tw-flex tw-flex-col tw-gap-y-1.5">
          <div
            className={`tw-overflow-hidden ${
              isEthereumAddress(member.detail_view_key) ||
              isAutoGeneratedHandle(member.detail_view_key)
                ? "tw-max-w-[8rem] tw-truncate"
                : ""
            }`}
          >
            <span className={`tw-text-sm tw-font-semibold ${textColorClass}`}>
              {member.display}
            </span>
          </div>
          <div>
            <UserLevel level={member.level} size="xs" />
          </div>
        </div>

        {member.last_activity && (
          <div className="tw-flex tw-items-center tw-gap-x-1 tw-self-start tw-ml-auto">
            <span className="tw-text-iron-400 tw-text-sm">Active</span>
            <span className="tw-text-iron-400 tw-text-sm">
              <CommonTimeAgo timestamp={member.last_activity} short={true} />
            </span>
          </div>
        )}
      </div>

      <div className="tw-ml-8 tw-mt-2.5 tw-overflow-x-hidden">
        <div className="tw-flex tw-items-center tw-justify-between tw-gap-x-3 tw-whitespace-nowrap tw-overflow-x-auto">
          <div className="tw-flex tw-items-baseline tw-gap-x-1">
            <span className="tw-font-medium tw-text-iron-50 tw-text-sm">
              {formatNumberWithCommasOrDash(member.tdh)}
            </span>
            <span className="tw-text-iron-400 tw-text-sm">TDH</span>
          </div>
          <div className="tw-flex tw-items-baseline tw-gap-x-1">
            <span className="tw-font-medium tw-text-iron-50 tw-text-sm">
              {formatNumberWithCommasOrDash(member.rep)}
            </span>
            <span className="tw-text-iron-400 tw-text-sm">REP</span>
          </div>
          <div className="tw-flex tw-items-baseline tw-gap-x-1">
            <span className="tw-font-medium tw-text-iron-50 tw-text-sm">
              {formatNumberWithCommasOrDash(member.cic)}
            </span>
            <Tippy
              placement="top"
              interactive={false}
              content={CIC_TO_TEXT[cicToType(member.cic)]}
            >
              <span className="tw-h-4 tw-w-4 tw-flex-shrink-0">
                <UserCICTypeIcon cic={member.cic} />
              </span>
            </Tippy>
          </div>
        </div>
      </div>
    </Link>
  );
}
