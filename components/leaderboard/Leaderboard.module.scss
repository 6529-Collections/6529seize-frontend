@import "../../styles/variables.scss";

.scrollContainer {
  -ms-overflow-style: none; /* Internet Explorer 10+ */
  scrollbar-width: none; /* Firefox */
  overflow-x: scroll;
}

.scrollContainer::-webkit-scrollbar {
  display: none;
}

.headerMenuFocus {
  background-color: transparent;
  width: 100%;
  height: 48px;
  height: 48px;
  line-height: 48px;
  font-size: larger;
  font-weight: bolder;
  color: $lightest-grey;
}

.pageHeader {
  white-space: nowrap;
  h1 {
    margin-bottom: 0px !important;
  }
}

.rank {
  width: 5%;
  text-align: center;
}

.hodler {
  width: 40%;
  margin-left: 10%;
  span {
    overflow-wrap: break-word;
  }
}

.memeLabRank {
  width: 5%;
  text-align: center;
}

.memeLabHodler {
  width: 80%;
  span {
    overflow-wrap: break-word;
  }
}

.memeLabBalance {
  width: 15%;
}

.totalResults {
  font-size: larger;
}

.balance {
  width: 10%;
  text-align: center;
}

.tdh {
  width: 45%;
  text-align: center;
}

.tdhSubNote {
  font-size: smaller;
  font-weight: lighter;
}

.tdhSub {
  width: calc(55% / 6);
  text-align: center;
}

.viewAllLink {
  font-size: 15px !important;
  font-family: $main-font;
  font-weight: lighter;
}

.tdhBoost {
  font-size: 13px;
  line-height: 13px !important;
  float: none !important;
}

@media only screen and (max-width: 1200px) {
  .tdhBoost {
    font-size: 11px;
    line-height: 11px;
  }
}

@media only screen and (max-width: 800px) {
  .viewAllLink {
    font-size: 12px !important;
  }

  .tdhBoost {
    font-size: 9px;
    line-height: 9px;
  }
}

.boolean {
  height: $font-size;
}

.caret {
  height: 14px;
  cursor: pointer;
}

@media only screen and (max-width: 1200px) {
  .boolean {
    height: $font-smaller !important;
  }

  .caret {
    height: 12px;
  }
}

@media only screen and (max-width: 800px) {
  .boolean {
    height: $font-smallest !important;
  }
}

.disabled {
  color: $lightest-grey;
  &:hover {
    color: white;
  }
}

.memeLabLeaderboardTable {
  tr td {
    white-space: nowrap;
    align-items: center;
    vertical-align: middle;
    span {
      float: left;
      margin-top: 4px;
      margin-bottom: 4px;
      a {
        line-height: 40px;
      }
    }
  }

  th {
    white-space: nowrap;
  }

  th span {
    white-space: nowrap;
  }

  td {
    line-height: 40px;
  }

  thead tr {
    background-color: transparent !important;
  }

  tr:nth-child(even) {
    background-color: $almost-very-dark-grey;
  }
}

.gap {
  height: 5px;
}

.leaderboardTable {
  tr td {
    white-space: nowrap;
    align-items: center;
    vertical-align: middle;
    span {
      float: left;
      margin-top: 4px;
      margin-bottom: 4px;
      a {
        line-height: 40px;
      }
    }
  }

  th {
    white-space: nowrap;
  }

  th span {
    white-space: nowrap;
  }

  td {
    line-height: 40px;
  }

  thead tr {
    background-color: transparent !important;
  }

  tr:nth-child(odd) {
    background-color: $almost-very-dark-grey;
  }
}

@media only screen and (max-width: 1600px) {
  .hodler {
    white-space: break-spaces !important;
  }
}

@media only screen and (max-width: 1290px) {
  .hodler {
    min-width: 220px;
  }
}

.nftLeaderboardTable {
  tr td {
    white-space: nowrap;
  }

  tr td:first-child {
    width: 1%;
  }

  td {
    line-height: 40px;
  }

  tr:nth-child(even) {
    background-color: $almost-very-dark-grey;
  }
}

.leaderboardTable > :not(caption) > * > *,
.nftLeaderboardTable > :not(caption) > * > * {
  padding: 0.5rem;
}

.lastTDH {
  white-space: nowrap;
  color: $font-color-h;
  // line-height: 48px;
  font-size: smaller;
  a {
    color: $font-color-h !important;
  }
}

.borderBottom {
  border-bottom: 0.5px solid $font-color !important;
  padding: 0rem !important;
  position: relative;
}

.focusSwitchLabel {
  white-space: nowrap;
  float: left;
  line-height: 48px;
  border: 2px solid white;
  border-left: none;
  padding-left: 10px;
  padding-right: 10px;
  cursor: pointer;
  width: calc(100% / 3);
  text-align: center;

  &:first-of-type {
    border: 2px solid white;
  }
}

.focusSwitchLabelExtraPadding {
  padding-left: 18px;
  padding-right: 18px;
}

.focusSwitchLabelActive {
  background-color: $font-color;
  color: $bg-color-2;
}

.focusSwitch {
  font-size: larger;
  font-weight: bolder;
  float: left;
  height: 48px;
  line-height: 48px;
  input {
    cursor: pointer;
    line-height: 48px;
    margin-top: 15px;
    background-color: $yellow;
    border-color: $very-dark-grey !important;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%231e1e1e'/%3e%3c/svg%3e") !important;
  }
  input:checked {
    background-color: $orange !important;
  }
}

@media only screen and (max-width: 1200px) {
  .focusSwitch {
    margin-left: 10px;
  }
}

@media only screen and (max-width: 800px) {
  .focusSwitch {
    margin-left: 20px;
  }
}

.contentDropdown {
  line-height: 48px;
  text-align: center;
  background-color: transparent;
  border: none;
  a {
    line-height: 30px;
  }
  button {
    font-size: larger !important;
    font-weight: bolder !important;
    cursor: copy;
    padding: 0;
    background-color: transparent !important;
    border-color: transparent !important;
    &::after {
      margin-top: 0.8rem;
    }
  }
  div {
    width: 60%;
  }
}

.focus {
  color: $font-color;
  cursor: pointer;
}

.disabled {
  color: $lightest-grey;
  text-decoration: none;
  &:hover {
    color: white;
  }
}

@media only screen and (max-width: 800px) {
  .contentDropdown {
    button {
      &::after {
        margin-top: 0.5rem;
      }
    }
  }
}

.museumToggle {
  display: inline-block;
  margin-left: 20px;
  line-height: 48px;
  input {
    margin-top: 15px;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23000'/%3e%3c/svg%3e") !important;
    border-color: black !important;
  }
  input:checked {
    background-color: $yellow !important;
  }
}

.loader {
  width: 24px;
  height: 24px;
  border: 5px solid #fff;
  border-bottom-color: transparent;
  border-radius: 50%;
  display: inline-block;
  box-sizing: border-box;
  animation: rotation 1s linear infinite;
  margin-left: 10px;
  margin-bottom: -2px;
}

@keyframes rotation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
