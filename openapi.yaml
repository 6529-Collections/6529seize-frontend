openapi: 3.0.3
info:
  title: Seize API
  description: >-
    This is the API interface description for the most commonly used operations
    in Seize API.  Some modifying endpoints require an authentication token.  
    We are in the process of documenting all Seize APIs.   If there is an API
    that you need, please ping us in Discord and we will aim to prioritize its
    documentation.
  version: 1.0.0
servers:
  - url: /api
paths:
  /aggregated-activity:
    get:
      tags:
        - Aggregated Activity
      summary: Get aggregated activity
      operationId: getAggregatedActivity
      parameters:
        - name: page_size
          in: query
          description: Default is 50
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
            maximum: 100
        - name: page
          in: query
          description: Default is 1
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
        - name: sort_direction
          in: query
          description: Default is ASC
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: sort
          in: query
          description: Default is primary_purchases_count
          required: false
          schema:
            type: string
            enum:
              - primary_purchases_count
              - primary_purchases_value
              - secondary_purchases_count
              - secondary_purchases_value
              - sales_count
              - sales_value
              - transfers_in
              - transfers_out
              - airdrops
              - burns
        - name: search
          in: query
          description: Search by wallet address, profile handle or ENS
          required: false
          schema:
            type: string
        - name: content
          in: query
          description: Filter by content
          required: false
          schema:
            type: string
            enum:
              - Memes
              - Gradient
              - MemeLab
              - NextGen
        - name: season
          in: query
          description: Filter by season
          required: false
          schema:
            type: number
            format: int64
        - name: collector
          in: query
          description: Filter by collector type
          required: false
          schema:
            type: string
            enum:
              - All
              - Memes
              - Meme SZN Set
              - Genesis Set
              - Gradient
              - MemeLab
              - NextGen
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AggregatedActivityPage"
  /aggregated-activity/consolidation/{consolidation_key}:
    get:
      tags:
        - Aggregated Activity
      summary: Get aggregated activity by consolidation key.
      operationId: getAggregatedActivityByConsolidationKey
      parameters:
        - name: consolidation_key
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AggregatedActivity"
        "404":
          description: Aggregated Activity for consolidation key not found
  /aggregated-activity/consolidation/{consolidation_key}/memes:
    get:
      tags:
        - Aggregated Activity
      summary: Get memes aggregated activity by consolidation key per season.
      operationId: getMemesAggregatedActivityByConsolidationKey
      parameters:
        - name: consolidation_key
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AggregatedActivityMemes"
        "404":
          description: Memes Aggregated Activity for consolidation key not found
  /auth/nonce:
    get:
      tags:
        - Authentication
      summary: Get a message to sign with your web3 wallet
      operationId: getNonce
      parameters:
        - name: signer_address
          in: query
          description: Your wallet address
          required: true
          schema:
            type: string
        - name: short_nonce
          in: query
          description: >-
            If true, the nonce will be shorter and easier to sign. Default is
            false.
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NonceResponse"
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Authenticate and get JWT token
      operationId: getAuthToken
      parameters:
        - name: signer_address
          in: query
          description: Your wallet address
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Invalid request
  /drops:
    get:
      tags:
        - Drops
      summary: Get latest drops.
      operationId: getLatestDrops
      parameters:
        - name: limit
          in: query
          description: How many drops to return (10 by default)
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 20
        - name: author
          in: query
          description: Drops by author
          required: false
          schema:
            type: string
        - name: group_id
          in: query
          description: Drops by authors that fall into supplied group
          required: false
          schema:
            type: string
        - name: wave_id
          in: query
          description: Drops in wave with given ID
          required: false
          schema:
            type: string
        - name: serial_no_less_than
          in: query
          description: Used to find older drops
          required: false
          schema:
            type: integer
            format: int64
        - name: include_replies
          in: query
          description: >-
            If true then reply drops will be included in top level (false by
            default)
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Drop"
    post:
      tags:
        - Drops
      summary: Create a drop
      description: Requires the user to be authenticated
      operationId: createDrop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDropRequest"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drop"
        "400":
          description: Invalid request
  /drops/{dropId}:
    get:
      tags:
        - Drops
      summary: Get drop by ID.
      operationId: getDropById
      parameters:
        - name: dropId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drop"
        "404":
          description: Drop not found
    post:
      tags:
        - Drops
      summary: Update drop by ID
      operationId: updateDropById
      parameters:
        - name: dropId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDropRequest"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drop"
        "400":
          description: Invalid request
        "404":
          description: Drop not found
    delete:
      tags:
        - Drops
      summary: Delete drop by ID
      operationId: deleteDropById
      parameters:
        - name: dropId
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: successful operation
        "404":
          description: Drop not found
  /drops/{dropId}/ratings:
    post:
      tags:
        - Drops
      summary: Rate a drop
      description: Requires the user to be authenticated
      operationId: rateDrop
      parameters:
        - name: dropId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DropRatingRequest"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drop"
        "400":
          description: Invalid request
        "404":
          description: Drop not found
  /drops/{dropId}/subscriptions:
    post:
      tags:
        - Drops
      summary: Subscribe authenticated user to drop actions.
      operationId: subscribeToDropActions
      parameters:
        - name: dropId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DropSubscriptionActions"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DropSubscriptionActions"
        "404":
          description: Wave not found
    delete:
      tags:
        - Drops
      summary: Unsubscribe authenticated user from drop actions.
      operationId: unsubscribeFromDropActions
      parameters:
        - name: dropId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DropSubscriptionActions"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DropSubscriptionActions"
        "404":
          description: Wave not found
  /drops/{dropId}/parts/{dropPartId}/replies:
    get:
      tags:
        - Drops
      summary: Get reply drops
      operationId: getReplyDrops
      parameters:
        - name: dropId
          in: path
          required: true
          schema:
            type: string
        - name: dropPartId
          in: path
          required: true
          schema:
            type: number
            format: int64
        - name: sort_direction
          in: query
          required: false
          schema:
            description: Default is DESC
            type: string
            enum:
              - ASC
              - DESC
        - name: sort
          in: query
          required: false
          schema:
            description: Default is created_at
            type: string
            enum:
              - created_at
        - name: page
          in: query
          required: false
          schema:
            description: Default is 1
            type: number
            format: int64
            minimum: 1
        - name: page_size
          in: query
          required: false
          schema:
            description: Default is 20
            type: number
            format: int64
            minimum: 1
            maximum: 50
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DropsPage"
        "404":
          description: Drop not found
  /drop-media/prep:
    post:
      tags:
        - Drops
      summary: Create S3 URL for drop media upload
      description: Requires the user to be authenticated
      operationId: createDropMediaUrl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMediaUploadUrlRequest"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMediaUrlResponse"
        "400":
          description: Invalid request
  /feed:
    get:
      tags:
        - Feed
      summary: Get feed
      operationId: getFeed
      parameters:
        - name: serial_no_less_than
          in: query
          description: Used to find older items
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeedItem"
  /groups:
    get:
      tags:
        - Groups
      summary: Search for user groups
      operationId: searchUserGroups
      parameters:
        - name: group_name
          description: Partial or full name
          in: query
          required: false
          schema:
            type: string
        - name: author_identity
          description: Group author identity
          in: query
          required: false
          schema:
            type: string
        - name: created_at_less_than
          description: created at date less than
          in: query
          required: false
          schema:
            type: number
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GroupFull"
    post:
      tags:
        - Groups
      summary: Create a group
      operationId: createGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGroup"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupFull"
        "400":
          description: Invalid request
  /groups/{id}/visible:
    post:
      tags:
        - Groups
      summary: Change group visibility
      operationId: changeGroupVisibility
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeGroupVisibility"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupFull"
        "400":
          description: Invalid request
        "404":
          description: Group not found
  /groups/{id}/identity_groups/{identity_group_id}:
    get:
      tags:
        - Groups
      summary: >-
        Get identity groups identities. Identities are represented as primary
        wallet addresses
      operationId: getIdentityGroupIdentities
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: identity_group_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "404":
          description: Group not found
  /identities/{id}/subscriptions:
    get:
      tags:
        - Identities
      summary: Get subscribed actions to identity for authenticated user.
      operationId: getIdentitySubscriptions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentitySubscriptionActions"
        "404":
          description: Identity not found
    post:
      tags:
        - Identities
      summary: Subscribe authenticated user to identities actions.
      operationId: subscribeToIdentityActions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdentitySubscriptionActions"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentitySubscriptionActions"
        "404":
          description: Identity not found
    delete:
      tags:
        - Identities
      summary: Unsubscribe authenticated user from identity actions.
      operationId: unsubscribeFromIdentityActions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdentitySubscriptionActions"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentitySubscriptionActions"
  /nft-owners:
    get:
      tags:
        - NFT Owners
      summary: Get NFT owners
      operationId: getNftOwners
      parameters:
        - name: page_size
          in: query
          description: Default is 50
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
            maximum: 100
        - name: page
          in: query
          description: Default is 1
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
        - name: sort_direction
          in: query
          description: Default is DESC
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: contract
          in: query
          description: Filter by contract address
          required: false
          schema:
            type: string
        - name: token_id
          in: query
          description: Filter by token ID
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/NftOwnerPage"
  /nft-owners/consolidation/{consolidation_key}:
    get:
      tags:
        - NFT Owners
      summary: Get NFT owners by consolidation key
      operationId: getNftOwnersByConsolidationKey
      parameters:
        - name: consolidation_key
          in: path
          required: true
          schema:
            type: string
        - name: page_size
          in: query
          description: Default is 50
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
            maximum: 100
        - name: page
          in: query
          description: Default is 1
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
        - name: sort_direction
          in: query
          description: Default is DESC
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: contract
          in: query
          description: Filter by contract address
          required: false
          schema:
            type: string
        - name: token_id
          in: query
          description: Filter by token ID
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/NftOwnerPage"
  /nfts:
    get:
      tags:
        - NFTs
      summary: Get NFTs
      operationId: getNfts
      parameters:
        - name: page_size
          in: query
          description: Default is 50
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
            maximum: 101
        - name: page
          in: query
          description: Default is 1
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
        - name: sort_direction
          in: query
          description: Default is DESC
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: id
          in: query
          description: Filter by NFT ID
          required: false
          schema:
            type: string
        - name: contract
          in: query
          description: Filter by NFT ID
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NftsPage"
  /notifications:
    get:
      tags:
        - Notifications
      summary: Get notifications for authenticated user.
      operationId: getNotifications
      parameters:
        - name: limit
          in: query
          description: Default is 10
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
            maximum: 101
        - name: id_less_than
          in: query
          description: Used to find older notifications
          required: false
          schema:
            type: number
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationsResponse"
  /notifications/{id}/read:
    post:
      tags:
        - Notifications
      summary: Mark notification as read
      operationId: markNotificationAsRead
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Notification ID or string "all" to mark all notifications as read
      responses:
        "201":
          description: successful operation
  /blocks:
    get:
      tags:
        - Other
      summary: Get blocks and related timestamps
      operationId: getBlocks
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlocksPage"
  /uploads:
    get:
      tags:
        - Other
      summary: Get TDH snapshots links
      operationId: getUploads
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: block
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadsPage"
  /consolidated_uploads:
    get:
      tags:
        - Other
      summary: Get consolidated TDH snapshots links
      operationId: getConsolidatedUploads
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: block
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadsPage"
  /settings:
    get:
      tags:
        - Other
      summary: Seize settings
      operationId: getSettings
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeizeSettings"
  /artists:
    get:
      tags:
        - Other
      summary: Artists info
      operationId: getArtists
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: meme_id
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtistsPage"
  /memes/artists_names:
    get:
      tags:
        - Other
      summary: meme artists names
      operationId: getMemeArtistsNames
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ArtistNameItem"
  /memelab/artists_names:
    get:
      tags:
        - Other
      summary: memelab artists names
      operationId: getMemelabArtistsNames
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ArtistNameItem"
  /owners-balances:
    get:
      tags:
        - Owners Balances
      summary: Get owner balances
      operationId: getOwnerBalances
      parameters:
        - name: page_size
          in: query
          description: Default is 50
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
            maximum: 100
        - name: page
          in: query
          description: Default is 1
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
        - name: sort_direction
          in: query
          description: Default is DESC
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OwnerBalancePage"
  /owners-balances/consolidation/{consolidation_key}:
    get:
      tags:
        - Owners Balances
      summary: Get owner balance by consolidation key.
      operationId: getOwnerBalanceByConsolidationKey
      parameters:
        - name: consolidation_key
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerBalance"
        "404":
          description: Owner Balance for consolidation key not found
  /owners-balances/consolidation/{consolidation_key}/memes:
    get:
      tags:
        - Owners Balances
      summary: Get memes owner balance by consolidation key.
      operationId: getMemesOwnerBalanceByConsolidationKey
      parameters:
        - name: consolidation_key
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OwnerBalanceMemes"
        "404":
          description: Memes Owner Balance for consolidation key not found
  /profiles/{identity}/cic/rating:
    post:
      tags:
        - ProfileCIC
      summary: >-
        Change profile CIC rating. If you are authenticated as proxy, you will
        be rating on behalf of the profile you are proxying.
      operationId: rateProfileCic
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeProfileCicRating"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeProfileCicRatingResponse"
        "400":
          description: Invalid request
  /profiles/{identity}/repcic/ratings/by-rater:
    get:
      tags:
        - ProfileCIC
      summary: Get profile CIC ratings by rater
      operationId: getProfileCicRatingsByRater
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: given
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: number
            minimum: 1
        - name: page_size
          in: query
          required: false
          schema:
            type: number
            minimum: 1
            maximum: 2000
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: order_by
          in: query
          required: false
          schema:
            type: string
            enum:
              - last_modified
              - rating
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingWithProfileInfoAndLevelPage"
        "404":
          description: Profile not found
  /profiles/{identity}/rep/rating:
    post:
      tags:
        - ProfileREP
      summary: >-
        Change profile REP rating. If you are authenticated as proxy, you will
        be rating on behalf of the profile you are proxying.
      operationId: rateProfileRep
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeProfileRepRating"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeProfileRepRatingResponse"
        "400":
          description: Invalid request
    get:
      tags:
        - ProfileREP
      summary: Get profile REP rating
      operationId: getProfileRepRating
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: from_identity
          in: query
          required: false
          schema:
            type: string
        - name: category
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepRating"
        "404":
          description: Profile not found
  /profiles/{identity}/rep/ratings/by-rater:
    get:
      tags:
        - ProfileREP
      summary: Get profile REP ratings by rater
      operationId: getProfileRepRatingsByRater
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
        - name: given
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: number
            minimum: 1
        - name: page_size
          in: query
          required: false
          schema:
            type: number
            minimum: 1
            maximum: 2000
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: order_by
          in: query
          required: false
          schema:
            type: string
            enum:
              - last_modified
              - rating
        - name: category
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RatingWithProfileInfoAndLevelPage"
        "404":
          description: Profile not found
  /profiles/{identity}/proxies:
    get:
      tags:
        - Proxies
      summary: Get profile proxies
      operationId: getProfileProxies
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileProxy"
        "404":
          description: Profile not found
  /profiles/{identity}/proxies/received:
    get:
      tags:
        - Proxies
      summary: Get proxies received by a profile
      operationId: getProxiesReceived
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileProxy"
        "404":
          description: Profile not found
  /profiles/{identity}/proxies/granted:
    get:
      tags:
        - Proxies
      summary: Get proxies granted by a profile
      operationId: getProxiesGranted
      parameters:
        - name: identity
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileProxy"
        "404":
          description: Profile not found
  /proxies:
    post:
      tags:
        - Proxies
      summary: Create a new proxy
      description: Requires the user to be authenticated
      operationId: createProxy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNewProfileProxy"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileProxy"
        "400":
          description: Invalid request
  /proxies/{proxyId}:
    get:
      tags:
        - Proxies
      summary: Get proxy by ID
      operationId: getProxyById
      parameters:
        - name: proxyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileProxy"
        "404":
          description: Proxy not found
  /proxies/{proxyId}/actions:
    post:
      tags:
        - Proxies
      summary: Add action to proxy
      description: Requires the user to be authenticated
      operationId: addActionToProxy
      parameters:
        - name: proxyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: "#/components/schemas/CreateNewProfileProxyAllocateRepAction"
                - $ref: "#/components/schemas/CreateNewProfileProxyAllocateCicAction"
                - $ref: "#/components/schemas/CreateNewProfileProxyCreateWaveAction"
                - $ref: "#/components/schemas/CreateNewProfileProxyReadWaveAction"
                - $ref: >-
                    #/components/schemas/CreateNewProfileProxyCreateWaveParticipationDropAction
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileProxyAction"
        "400":
          description: Invalid request
        "404":
          description: Proxy not found
  /proxies/{proxyId}/actions/{actionId}/acceptance:
    post:
      tags:
        - Proxies
      summary: Accept action
      operationId: acceptAction
      parameters:
        - name: proxyId
          in: path
          required: true
          schema:
            type: string
        - name: actionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
              properties:
                action:
                  type: string
                  enum:
                    - ACCEPT
                    - REJECT
                    - REVOKE
                    - RESTORE
      responses:
        "201":
          description: successful operation
        "400":
          description: Invalid request
        "404":
          description: Proxy or action not found
  /proxies/{proxyId}/actions/{actionId}:
    put:
      tags:
        - Proxies
      summary: Update action
      operationId: updateAction
      parameters:
        - name: proxyId
          in: path
          required: true
          schema:
            type: string
        - name: actionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProxyActionRequest"
      responses:
        "201":
          description: successful operation
        "400":
          description: Invalid request
        "404":
          description: Proxy or action not found
  /push-notifications/register:
    post:
      tags:
        - Push Notifications
      summary: Register a push notification token
      operationId: registerPushNotificationToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterPushNotificationTokenRequest"
      responses:
        "201":
          description: Push notification token registered successfully
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
  /bulk-rep:
    post:
      tags:
        - Ratings
      summary: >-
        Change REP rating of multiple targets and categories in one go. Targets 
        final REP value will be the value you supply here. If you supply
        multiple  addresses for one consolidation group then those amounts will
        be summed together.
      operationId: bulkRep
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkRepRequest"
      responses:
        "201":
          description: successful operation
        "400":
          description: Invalid request
  /ratings:
    post:
      tags:
        - Ratings
      summary: >-
        This is deprecated. Use bulk-rep instead.
        Bulk rate. Supplied amount will be added to all target identities. If
        same identity is supplied multiple times, all the additions will be
        summed up. Targets must be represented as Ethereum wallet addresses. ENS
        names and profile handles are not supported.
      deprecated: true
      operationId: bulkRate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkRateRequest"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkRateResponse"
        "400":
          description: Invalid request
  /ratings/credit:
    get:
      tags:
        - Ratings
      summary: Get available credit for rating
      operationId: getCreditLeft
      parameters:
        - name: rater
          in: query
          required: true
          schema:
            type: string
        - name: rater_representative
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailableRatingCredit"
  /identity-subscriptions/outgoing/{target_type}:
    get:
      tags:
        - Subscriptions
      summary: Get outgoing subscriptions for authenticated user.
      operationId: getOutgoingSubscriptions
      parameters:
        - name: target_type
          in: path
          required: true
          schema:
            type: string
            enum:
              - IDENTITY
              - WAVE
              - DROP
        - name: page_size
          in: query
          required: false
          schema:
            type: number
            format: int64
            default: 10
            minimum: 1
            maximum: 100
        - name: page
          in: query
          required: false
          schema:
            type: number
            format: int64
            default: 1
            minimum: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OutgoingIdentitySubscriptionsPage"
  /identity-subscriptions/incoming/{target_type}/{target_id}:
    get:
      tags:
        - Subscriptions
      summary: Get identities subscribed to target.
      operationId: getIncomingSubscriptionsForTarget
      parameters:
        - name: target_type
          in: path
          required: true
          schema:
            type: string
            enum:
              - IDENTITY
              - WAVE
              - DROP
        - name: target_id
          in: path
          required: true
          schema:
            type: string
        - name: page_size
          in: query
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
            default: 10
            maximum: 100
        - name: page
          in: query
          required: false
          schema:
            type: number
            format: int64
            default: 1
            minimum: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IncomingIdentitySubscriptionsPage"
  /transactions:
    get:
      tags:
        - Transactions
      summary: Get transactions
      operationId: getTransactions
      parameters:
        - name: page_size
          in: query
          description: Default is 50
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
            maximum: 100
        - name: page
          in: query
          description: Default is 1
          required: false
          schema:
            type: number
            format: int64
            minimum: 1
        - name: wallets
          in: query
          description: Filter by wallet address
          required: false
          schema:
            type: string
        - name: contract
          in: query
          description: Filter by contract address
          required: false
          schema:
            type: string
        - name: nfts
          in: query
          description: Filter by NFT ID
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: Filter by transaction type
          required: false
          schema:
            type: string
            enum:
              - sales
              - purchases
              - transfers
              - airdrops
              - burns
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransactionPage"
  /wave-media/prep:
    post:
      tags:
        - Waves
      summary: Create S3 URL for wave PFP
      description: Requires the user to be authenticated
      operationId: createWaveMediaUrl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMediaUploadUrlRequest"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMediaUrlResponse"
        "400":
          description: Invalid request
  /waves-overview:
    get:
      tags:
        - Waves
      summary: >-
        Get overview of waves by different criteria. User must be authenticated.
        Public alternative is /public/waves-overview.
      operationId: getWavesOverview
      parameters:
        - name: limit
          in: query
          description: How many waves to return (10 by default)
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 20
            default: 10
        - name: offset
          in: query
          description: Used to find next waves
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: type
          in: query
          description: Type of overview
          required: true
          schema:
            $ref: "#/components/schemas/WavesOverviewType"
        - name: only_waves_followed_by_authenticated_user
          in: query
          description: If true then result only includes waves what authenticated user follows
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Wave"
  /waves:
    get:
      tags:
        - Waves
      summary: Get waves.
      operationId: getWaves
      parameters:
        - name: name
          in: query
          description: Search by name or part of name
          required: false
          schema:
            type: string
        - name: author
          in: query
          description: Search by author identity
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: How many waves to return (10 by default)
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 20
        - name: serial_no_less_than
          in: query
          description: Used to find older drops
          required: false
          schema:
            type: integer
            format: int64
        - name: group_id
          in: query
          description: Waves by authors that fall into supplied group
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Wave"
    post:
      tags:
        - Waves
      summary: Create new wave
      description: Requires the user to be authenticated
      operationId: createWave
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNewWave"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wave"
        "400":
          description: Invalid request
  /waves/{id}:
    get:
      tags:
        - Waves
      summary: Get wave by ID.
      operationId: getWaveById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wave"
        "404":
          description: Wave not found
    delete:
      tags:
        - Waves
      summary: Delete wave by ID
      operationId: deleteWaveById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: successful operation
        "404":
          description: Wave not found
    post:
      tags:
        - Waves
      summary: Update wave by ID
      operationId: updateWaveById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWaveRequest"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wave"
        "400":
          description: Invalid request
        "404":
          description: Drop not found
  /waves/{id}/drops:
    get:
      tags:
        - Waves
      summary: Get drops related to wave or parent drop
      operationId: getDropsOfWave
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: drop_id
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 200
            default: 20
        - name: serial_no_limit
          in: query
          required: false
          description: >-
            Use instead of serial_no_less_than. If you use serial_no_less_than
            and this then serial_no_less_than is preferred (until future when
            it"s deleted)
          schema:
            type: integer
            format: int64
        - name: search_strategy
          in: query
          required: false
          description: >-
            Use in combination with serial_no_limit. If this not set then
            FIND_OLDER is used. If serial_no_less_than is set then this is
            ignored.
          schema:
            $ref: "#/components/schemas/DropSearchStrategy"
        - name: serial_no_less_than
          in: query
          required: false
          deprecated: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WaveDropsFeed"
  /waves/{id}/subscriptions:
    post:
      tags:
        - Waves
      summary: Subscribe authenticated user to wave actions.
      operationId: subscribeToWaveActions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WaveSubscriptionActions"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WaveSubscriptionActions"
        "404":
          description: Wave not found
    delete:
      tags:
        - Waves
      summary: Unsubscribe authenticated user from wave actions.
      operationId: unsubscribeFromWaveActions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WaveSubscriptionActions"
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WaveSubscriptionActions"
        "404":
          description: Wave not found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    AggregatedActivity:
      type: object
      required:
        - consolidation_key
        - created_at
        - updated_at
        - primary_purchases_value
        - primary_purchases_count
        - secondary_purchases_value
        - secondary_purchases_count
        - burns
        - sales_value
        - sales_count
        - airdrops
        - transfers_in
        - transfers_out
        - primary_purchases_value_memes
        - primary_purchases_count_memes
        - secondary_purchases_value_memes
        - secondary_purchases_count_memes
        - burns_memes
        - sales_value_memes
        - sales_count_memes
        - airdrops_memes
        - transfers_in_memes
        - transfers_out_memes
        - primary_purchases_value_memelab
        - primary_purchases_count_memelab
        - secondary_purchases_value_memelab
        - secondary_purchases_count_memelab
        - burns_memelab
        - sales_value_memelab
        - sales_count_memelab
        - airdrops_memelab
        - transfers_in_memelab
        - transfers_out_memelab
        - primary_purchases_value_gradients
        - primary_purchases_count_gradients
        - secondary_purchases_value_gradients
        - secondary_purchases_count_gradients
        - burns_gradients
        - sales_value_gradients
        - sales_count_gradients
        - airdrops_gradients
        - transfers_in_gradients
        - transfers_out_gradients
        - primary_purchases_value_nextgen
        - primary_purchases_count_nextgen
        - secondary_purchases_value_nextgen
        - secondary_purchases_count_nextgen
        - burns_nextgen
        - sales_value_nextgen
        - sales_count_nextgen
        - airdrops_nextgen
        - transfers_in_nextgen
        - transfers_out_nextgen
      properties:
        consolidation_key:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        primary_purchases_value:
          type: integer
          format: int64
        primary_purchases_count:
          type: integer
          format: int64
        secondary_purchases_value:
          type: integer
          format: int64
        secondary_purchases_count:
          type: integer
          format: int64
        burns:
          type: integer
          format: int64
        sales_value:
          type: integer
          format: int64
        sales_count:
          type: integer
          format: int64
        airdrops:
          type: integer
          format: int64
        transfers_in:
          type: integer
          format: int64
        transfers_out:
          type: integer
          format: int64
        primary_purchases_value_memes:
          type: integer
          format: int64
        primary_purchases_count_memes:
          type: integer
          format: int64
        secondary_purchases_value_memes:
          type: integer
          format: int64
        secondary_purchases_count_memes:
          type: integer
          format: int64
        burns_memes:
          type: integer
          format: int64
        sales_value_memes:
          type: integer
          format: int64
        sales_count_memes:
          type: integer
          format: int64
        airdrops_memes:
          type: integer
          format: int64
        transfers_in_memes:
          type: integer
          format: int64
        transfers_out_memes:
          type: integer
          format: int64
        primary_purchases_value_memelab:
          type: integer
          format: int64
        primary_purchases_count_memelab:
          type: integer
          format: int64
        secondary_purchases_value_memelab:
          type: integer
          format: int64
        secondary_purchases_count_memelab:
          type: integer
          format: int64
        burns_memelab:
          type: integer
          format: int64
        sales_value_memelab:
          type: integer
          format: int64
        sales_count_memelab:
          type: integer
          format: int64
        airdrops_memelab:
          type: integer
          format: int64
        transfers_in_memelab:
          type: integer
          format: int64
        transfers_out_memelab:
          type: integer
          format: int64
        primary_purchases_value_gradients:
          type: integer
          format: int64
        primary_purchases_count_gradients:
          type: integer
          format: int64
        secondary_purchases_value_gradients:
          type: integer
          format: int64
        secondary_purchases_count_gradients:
          type: integer
          format: int64
        burns_gradients:
          type: integer
          format: int64
        sales_value_gradients:
          type: integer
          format: int64
        sales_count_gradients:
          type: integer
          format: int64
        airdrops_gradients:
          type: integer
          format: int64
        transfers_in_gradients:
          type: integer
          format: int64
        transfers_out_gradients:
          type: integer
          format: int64
        primary_purchases_value_nextgen:
          type: integer
          format: int64
        primary_purchases_count_nextgen:
          type: integer
          format: int64
        secondary_purchases_value_nextgen:
          type: integer
          format: int64
        secondary_purchases_count_nextgen:
          type: integer
          format: int64
        burns_nextgen:
          type: integer
          format: int64
        sales_value_nextgen:
          type: integer
          format: int64
        sales_count_nextgen:
          type: integer
          format: int64
        airdrops_nextgen:
          type: integer
          format: int64
        transfers_in_nextgen:
          type: integer
          format: int64
        transfers_out_nextgen:
          type: integer
          format: int64
    AggregatedActivityMemes:
      type: object
      required:
        - consolidation_key
        - created_at
        - updated_at
        - primary_purchases_value
        - primary_purchases_count
        - secondary_purchases_value
        - secondary_purchases_count
        - burns
        - sales_value
        - sales_count
        - airdrops
        - transfers_in
        - transfers_out
        - season
      properties:
        consolidation_key:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        primary_purchases_value:
          type: integer
          format: int64
        primary_purchases_count:
          type: integer
          format: int64
        secondary_purchases_value:
          type: integer
          format: int64
        secondary_purchases_count:
          type: integer
          format: int64
        burns:
          type: integer
          format: int64
        sales_value:
          type: integer
          format: int64
        sales_count:
          type: integer
          format: int64
        airdrops:
          type: integer
          format: int64
        transfers_in:
          type: integer
          format: int64
        transfers_out:
          type: integer
          format: int64
        season:
          type: integer
          format: int64
    AggregatedActivityPage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageWithNextUriBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/AggregatedActivity"
    ArtistItem:
      type: object
      required:
        - name
        - bio
        - pfp
        - memes
        - memelab
        - gradients
        - work
        - social_links
      properties:
        name:
          type: string
        bio:
          type: string
          nullable: true
        pfp:
          type: string
          nullable: true
        memes:
          type: array
          items:
            $ref: "#/components/schemas/ArtistsNft"
        memelab:
          type: array
          items:
            $ref: "#/components/schemas/ArtistsNft"
        gradients:
          type: array
          items:
            type: integer
            format: int64
        work:
          type: array
          items:
            $ref: "#/components/schemas/ArtistsWork"
        social_links:
          type: array
          items:
            type: object
    ArtistNameItem:
      type: object
      required:
        - name
        - cards
      properties:
        name:
          type: string
        cards:
          type: array
          items:
            type: integer
            format: int64
    ArtistsNft:
      type: object
      required:
        - id
        - collaboration_with
      properties:
        id:
          type: integer
          format: int64
        collaboration_with:
          type: array
          items:
            type: string
    ArtistsPage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageWithNextUriBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ArtistItem"
    ArtistsWork:
      type: object
      required:
        - title
        - link
      properties:
        title:
          type: string
        link:
          type: string
    AvailableRatingCredit:
      type: object
      required:
        - credit
      properties:
        cic_credit:
          type: number
          format: int64
        rep_credit:
          type: number
          format: int64
    BlockItem:
      type: object
      required:
        - block_number
        - created_at
        - timestamp
      properties:
        block_number:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
        timestamp:
          type: string
          format: date-time
    BlocksPage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageWithNextUriBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/BlockItem"
    BulkRateRequest:
      type: object
      required:
        - matter
        - category
        - amount_to_add
        - target_wallet_addresses
      properties:
        matter:
          $ref: "#/components/schemas/RateMatter"
        category:
          type: string
          maxLength: 100
          nullable: true
          pattern: ^[a-zA-Z0-9?!,."() ]$
          description: >-
            Category of the rating must be set when matter is REP and null if
            matter is CIC
        amount_to_add:
          type: number
          format: int64
          example: 1
        target_wallet_addresses:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 100
            pattern: 0x[a-fA-F0-9]{40}
            description: Wallet address of the target profile
    BulkRateResponse:
      type: object
      required:
        - skipped
      properties:
        skipped:
          type: array
          items:
            $ref: "#/components/schemas/BulkRateSkippedIdentity"
    BulkRateSkippedIdentity:
      type: object
      required:
        - identity
        - reason
      properties:
        identity:
          type: string
        reason:
          type: string
    BulkRepRequest:
      type: object
      required:
        - targets
      properties:
        targets:
          type: array
          maxLength: 200
          items:
            $ref: "#/components/schemas/BulkRepTarget"
    BulkRepTarget:
      type: object
      required:
        - address
        - category
        - amount
      properties:
        address:
          type: string
          pattern: 0x[a-fA-F0-9]{40}
        category:
          type: string
          maxLength: 100
          pattern: ^[a-zA-Z0-9?!,."() ]{1,100}$
        amount:
          type: integer
          format: int64
    ChangeGroupVisibility:
      type: object
      required:
        - visible
        - old_version_id
      properties:
        visible:
          type: boolean
        old_version_id:
          type: string
          minLength: 1
          nullable: true
    ChangeProfileCicRating:
      type: object
      required:
        - amount
        - category
      properties:
        amount:
          type: number
          format: int64
    ChangeProfileCicRatingResponse:
      type: object
      required:
        - total_cic_rating
        - cic_rating_by_user
      properties:
        total_cic_rating:
          type: number
          format: int64
        cic_rating_by_user:
          type: number
          format: int64
    ChangeProfileRepRating:
      type: object
      required:
        - amount
        - category
      properties:
        amount:
          type: number
          format: int64
        category:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9?!,."() ]{1,100}$
    ChangeProfileRepRatingResponse:
      type: object
      required:
        - total_rep_rating_for_category
        - rep_rating_for_category_by_user
      properties:
        total_rep_rating_for_category:
          type: number
          format: int64
        rep_rating_for_category_by_user:
          type: number
          format: int64
    CreateDropPart:
      type: object
      required:
        - media
      properties:
        content:
          type: string
          maxLength: 25000
          nullable: true
        quoted_drop:
          anyOf:
            - $ref: "#/components/schemas/QuotedDrop"
            - type: "null"
        media:
          type: array
          items:
            $ref: "#/components/schemas/DropMedia"
    CreateDropRequest:
      type: object
      required:
        - wave_id
      allOf:
        - $ref: "#/components/schemas/CreateWaveDropRequest"
      properties:
        wave_id:
          type: string
        reply_to:
          $ref: "#/components/schemas/ReplyToDrop"
    CreateGroup:
      type: object
      required:
        - name
        - group
      properties:
        name:
          type: string
        group:
          $ref: "#/components/schemas/CreateGroupDescription"
        is_private:
          type: boolean
    CreateGroupDescription:
      type: object
      required:
        - tdh
        - rep
        - cic
        - level
        - owns_nfts
        - identity_addresses
        - excluded_identity_addresses
      properties:
        tdh:
          $ref: "#/components/schemas/GroupTdhFilter"
        rep:
          $ref: "#/components/schemas/GroupRepFilter"
        cic:
          $ref: "#/components/schemas/GroupCicFilter"
        level:
          $ref: "#/components/schemas/GroupLevelFilter"
        owns_nfts:
          type: array
          items:
            $ref: "#/components/schemas/GroupOwnsNft"
        identity_addresses:
          anyOf:
            - type: "null"
            - type: array
              items:
                type: string
          example:
            - "0x1234567890123456789012345678901234567890"
        excluded_identity_addresses:
          anyOf:
            - type: "null"
            - type: array
              items:
                type: string
          example:
            - "0x1234567890123456789012345678901234567890"
    CreateMediaUploadUrlRequest:
      required:
        - content_type
        - file_name
        - file_size
      properties:
        content_type:
          type: string
          example: image/png
        file_name:
          type: string
          example: image.png
        file_size:
          type: number
          format: int64
          example: 1000
    CreateMediaUrlResponse:
      required:
        - upload_url
        - content_type
        - media_url
      properties:
        upload_url:
          type: string
          example: https://example.com/upload/image.png
        content_type:
          type: string
          example: image/png
        media_url:
          type: string
          example: https://example.com/final/image.png
    CreateNewProfileProxy:
      type: object
      required:
        - target_id
      properties:
        target_id:
          type: string
    CreateNewProfileProxyAllocateCicAction:
      type: object
      required:
        - action_type
        - end_time
        - credit_amount
      properties:
        action_type:
          $ref: "#/components/schemas/ProfileProxyActionType"
        end_time:
          anyOf:
            - type: "null"
            - type: number
              format: int64
        credit_amount:
          type: number
          format: int64
          example: 1000
    CreateNewProfileProxyAllocateRepAction:
      type: object
      required:
        - action_type
        - end_time
        - credit_amount
      properties:
        action_type:
          $ref: "#/components/schemas/ProfileProxyActionType"
        end_time:
          anyOf:
            - type: "null"
            - type: number
              format: int64
          example: 1719850339996
        credit_amount:
          type: number
          format: int64
          example: 1000
    CreateNewProfileProxyCreateWaveAction:
      type: object
      required:
        - action_type
        - end_time
      properties:
        action_type:
          $ref: "#/components/schemas/ProfileProxyActionType"
        end_time:
          anyOf:
            - type: "null"
            - type: number
              format: int64
    CreateNewProfileProxyCreateWaveParticipationDropAction:
      type: object
      required:
        - action_type
        - end_time
      properties:
        action_type:
          $ref: "#/components/schemas/ProfileProxyActionType"
        end_time:
          anyOf:
            - type: "null"
            - type: number
              format: int64
    CreateNewProfileProxyRateWaveDropAction:
      type: object
      required:
        - action_type
        - end_time
      properties:
        action_type:
          $ref: "#/components/schemas/ProfileProxyActionType"
        end_time:
          anyOf:
            - type: "null"
            - type: number
              format: int64
    CreateNewProfileProxyReadWaveAction:
      type: object
      required:
        - action_type
        - end_time
      properties:
        action_type:
          $ref: "#/components/schemas/ProfileProxyActionType"
        end_time:
          anyOf:
            - type: "null"
            - type: number
              format: int64
    CreateNewWave:
      type: object
      required:
        - name
        - picture
        - description_drop
        - voting
        - visibility
        - participation
        - wave
        - outcomes
      properties:
        name:
          description: The name of the wave
          type: string
          maxLength: 250
        picture:
          description: The picture of the wave
          type: string
          example: https://example.com/picture.jpg
          nullable: true
        description_drop:
          $ref: "#/components/schemas/CreateWaveDropRequest"
        voting:
          $ref: "#/components/schemas/CreateNewWaveVotingConfig"
        visibility:
          $ref: "#/components/schemas/CreateNewWaveVisibilityConfig"
        participation:
          $ref: "#/components/schemas/CreateNewWaveParticipationConfig"
        wave:
          $ref: "#/components/schemas/CreateWaveConfig"
        outcomes:
          type: array
          items:
            $ref: "#/components/schemas/WaveOutcome"
    CreateNewWaveParticipationConfig:
      type: object
      required:
        - scope
        - required_metadata
        - signature_required
        - no_of_applications_allowed_per_participant
        - required_media
      properties:
        scope:
          $ref: "#/components/schemas/CreateNewWaveScope"
        no_of_applications_allowed_per_participant:
          description: >-
            The number of applications allowed per participant. Infinite if
            omitted.
          type: integer
          format: int64
          nullable: true
          minimum: 1
        required_media:
          type: array
          items:
            $ref: "#/components/schemas/WaveParticipationRequirement"
        required_metadata:
          description: |
            The metadata that must be provided by the participant. 
            Empty array if nothing is required.
          type: array
          items:
            $ref: "#/components/schemas/WaveRequiredMetadata"
        signature_required:
          description: If true then the votes must be signed by voters.
          type: boolean
        period:
          $ref: "#/components/schemas/IntRange"
    CreateNewWaveScope:
      type: object
      required:
        - group_id
      properties:
        group_id:
          description: If null, everyone is included
          type: string
          nullable: true
    CreateNewWaveVisibilityConfig:
      type: object
      required:
        - scope
      properties:
        scope:
          $ref: "#/components/schemas/CreateNewWaveScope"
    CreateNewWaveVotingConfig:
      type: object
      required:
        - scope
        - credit_type
        - credit_scope
        - credit_category
        - signature_required
        - creditor_id
      properties:
        scope:
          $ref: "#/components/schemas/CreateNewWaveScope"
        credit_type:
          $ref: "#/components/schemas/WaveCreditType"
        credit_scope:
          $ref: "#/components/schemas/WaveCreditScope"
        credit_category:
          description: >-
            Only relevant when credit_type=REP. The REP category which is usable
            as credit. If not set then all categories will be usable as voting
            credits.
          type: string
          nullable: true
        creditor_id:
          description: Only relevant when credit_type=REP
          type: string
          nullable: true
        signature_required:
          description: If true then the votes must be signed by voters.
          type: boolean
        period:
          $ref: "#/components/schemas/IntRange"
    CreateWaveConfig:
      type: object
      required:
        - type
        - time_lock_ms
        - winning_thresholds
        - period
        - max_winners
        - admin_group
      properties:
        type:
          $ref: "#/components/schemas/WaveType"
        winning_thresholds:
          description: >-
            Drops which rate tally ends up in this range will win. Must be set
            if and only if type is APPROVE
          anyOf:
            - type: "null"
            - $ref: "#/components/schemas/IntRange"
        max_winners:
          description: >-
            This amount of top rated drops will win. Must be set if and only if
            type is RANK
          type: integer
          format: int64
          minimum: 1
          nullable: true
        time_lock_ms:
          nullable: true
          description: >-
            Vote of a voter is considered eligible after this amount of time
            after casting it. If not set then votes are eligible immediately
            after casting.
          type: integer
          format: int64
          minimum: 1
        admin_group:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/CreateNewWaveScope"
        period:
          anyOf:
            - type: "null"
            - $ref: "#/components/schemas/IntRange"
          example:
            min: 1719850339996
            max: 1719850339996
    CreateWaveDropRequest:
      type: object
      required:
        - referenced_nfts
        - mentioned_users
        - metadata
        - parts
      properties:
        title:
          type: string
          maxLength: 250
          nullable: true
        parts:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/CreateDropPart"
        referenced_nfts:
          type: array
          items:
            $ref: "#/components/schemas/DropReferencedNFT"
        mentioned_users:
          type: array
          items:
            $ref: "#/components/schemas/DropMentionedUser"
        metadata:
          type: array
          items:
            $ref: "#/components/schemas/DropMetadata"
    Drop:
      type: object
      required:
        - id
        - serial_no
        - wave
        - author
        - created_at
        - updated_at
        - referenced_nfts
        - mentioned_users
        - metadata
        - parts
        - parts_count
        - rating
        - top_raters
        - raters_count
        - title
        - context_profile_context
        - subscribed_actions
      properties:
        id:
          type: string
        serial_no:
          description: Sequence number of the drop in Seize
          type: number
          format: int64
        wave:
          $ref: "#/components/schemas/WaveMin"
        reply_to:
          $ref: "#/components/schemas/ReplyToDropResponse"
        author:
          $ref: "#/components/schemas/ProfileMin"
        created_at:
          description: >-
            Time when the drop was created in milliseconds since 1-1-1970
            00:00:00.0 UTC
          type: number
          format: int64
        updated_at:
          description: >-
            Time when the drop was updated in milliseconds since 1-1-1970
            00:00:00.0 UTC
          type: number
          format: int64
          nullable: true
        title:
          type: string
          maxLength: 250
          nullable: true
        parts:
          type: array
          items:
            $ref: "#/components/schemas/DropPart"
        parts_count:
          description: Number of drops in the storm
          type: number
          format: int64
        referenced_nfts:
          type: array
          items:
            $ref: "#/components/schemas/DropReferencedNFT"
        mentioned_users:
          type: array
          items:
            $ref: "#/components/schemas/DropMentionedUser"
        metadata:
          type: array
          items:
            $ref: "#/components/schemas/DropMetadata"
        rating:
          type: number
          format: int64
        top_raters:
          type: array
          items:
            $ref: "#/components/schemas/DropRater"
        raters_count:
          type: number
          format: int64
        context_profile_context:
          anyOf:
            - type: "null"
            - $ref: "#/components/schemas/DropContextProfileContext"
        subscribed_actions:
          type: array
          items:
            $ref: "#/components/schemas/DropSubscriptionTargetAction"
    DropAndDropVote:
      type: object
      required:
        - drop
        - vote
      properties:
        drop:
          $ref: "#/components/schemas/Drop"
        vote:
          $ref: "#/components/schemas/DropVote"
    DropContextProfileContext:
      type: object
      required:
        - rating
      properties:
        rating:
          type: number
          format: int64
    DropMedia:
      type: object
      required:
        - url
        - mime_type
      properties:
        url:
          type: string
          maxLength: 2000
        mime_type:
          type: string
          maxLength: 100
    DropMentionedUser:
      type: object
      required:
        - mentioned_profile_id
        - handle_in_content
      properties:
        mentioned_profile_id:
          type: string
          format: uuid
        handle_in_content:
          type: string
          maxLength: 100
        current_handle:
          type: string
          maxLength: 100
          nullable: true
    DropMetadata:
      type: object
      required:
        - data_key
        - data_value
      properties:
        data_key:
          type: string
          maxLength: 500
        data_value:
          type: string
          maxLength: 500
    DropPart:
      type: object
      required:
        - part_id
        - media
        - replies_count
        - quotes_count
        - quoted_drop
        - content
      properties:
        part_id:
          description: Which drop in the storm is this drop
          type: number
          format: int64
        content:
          type: string
          maxLength: 25000
          nullable: true
        media:
          type: array
          items:
            $ref: "#/components/schemas/DropMedia"
        quoted_drop:
          anyOf:
            - $ref: "#/components/schemas/QuotedDropResponse"
            - type: "null"
        replies_count:
          type: number
          format: int64
        quotes_count:
          type: number
          format: int64
        context_profile_context:
          anyOf:
            - type: "null"
            - $ref: "#/components/schemas/DropPartContextProfileContext"
    DropPartContextProfileContext:
      type: object
      required:
        - replies_count
        - quotes_count
      properties:
        replies_count:
          type: number
          format: int64
        quotes_count:
          type: number
          format: int64
    DropRater:
      type: object
      required:
        - profile
        - rating
      properties:
        profile:
          $ref: "#/components/schemas/ProfileMin"
        rating:
          type: number
          format: int64
    DropRatingRequest:
      type: object
      required:
        - rating
        - category
      properties:
        rating:
          type: number
          format: int64
        category:
          type: string
          maxLength: 100
    DropReferencedNFT:
      type: object
      required:
        - contract
        - token
        - name
      properties:
        contract:
          type: string
          maxLength: 100
        token:
          type: string
          maxLength: 250
        name:
          type: string
          maxLength: 500
    DropSearchStrategy:
      type: string
      enum:
        - FIND_OLDER
        - FIND_NEWER
        - FIND_BOTH
    DropsPage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Drop"
    DropSubscriptionActions:
      type: object
      required:
        - actions
      properties:
        actions:
          type: array
          items:
            $ref: "#/components/schemas/DropSubscriptionTargetAction"
    DropSubscriptionTargetAction:
      type: string
      enum:
        - DROP_REPLIED
        - DROP_VOTED
    DropTraceItem:
      type: object
      required:
        - drop_id
        - is_deleted
      properties:
        drop_id:
          type: string
        is_deleted:
          type: boolean
    DropVote:
      type: object
      required:
        - vote
        - voter
        - time
      properties:
        vote:
          type: number
          format: int64
        voter:
          $ref: "#/components/schemas/ProfileMin"
        time:
          type: number
          format: int64
    DropWithoutWave:
      type: object
      required:
        - id
        - serial_no
        - author
        - created_at
        - updated_at
        - referenced_nfts
        - mentioned_users
        - metadata
        - parts
        - parts_count
        - rating
        - top_raters
        - raters_count
        - title
        - subscribed_actions
        - context_profile_context
      properties:
        id:
          type: string
        serial_no:
          description: Sequence number of the drop in Seize
          type: number
          format: int64
        reply_to:
          $ref: "#/components/schemas/ReplyToDropResponse"
        author:
          $ref: "#/components/schemas/ProfileMin"
        created_at:
          description: >-
            Time when the drop was created in milliseconds since 1-1-1970
            00:00:00.0 UTC
          type: number
          format: int64
        updated_at:
          description: >-
            Time when the drop was updated in milliseconds since 1-1-1970
            00:00:00.0 UTC
          type: number
          format: int64
          nullable: true
        title:
          type: string
          maxLength: 250
          nullable: true
        parts:
          type: array
          items:
            $ref: "#/components/schemas/DropPart"
        parts_count:
          description: Number of drops in the storm
          type: number
          format: int64
        referenced_nfts:
          type: array
          items:
            $ref: "#/components/schemas/DropReferencedNFT"
        mentioned_users:
          type: array
          items:
            $ref: "#/components/schemas/DropMentionedUser"
        metadata:
          type: array
          items:
            $ref: "#/components/schemas/DropMetadata"
        rating:
          type: number
          format: int64
        top_raters:
          type: array
          items:
            $ref: "#/components/schemas/DropRater"
        raters_count:
          type: number
          format: int64
        context_profile_context:
          anyOf:
            - type: "null"
            - $ref: "#/components/schemas/DropContextProfileContext"
        subscribed_actions:
          type: array
          items:
            $ref: "#/components/schemas/DropSubscriptionTargetAction"
    FeedItem:
      type: object
      required:
        - serial_no
        - type
        - item
      properties:
        serial_no:
          type: number
          format: int64
        type:
          $ref: "#/components/schemas/FeedItemType"
        item:
          type: object
    FeedItemType:
      type: string
      enum:
        - WAVE_CREATED
        - DROP_CREATED
        - DROP_REPLIED
    Group:
      type: object
      required:
        - is_hidden
      properties:
        id:
          type: string
        name:
          type: string
        author:
          $ref: "#/components/schemas/ProfileMin"
        created_at:
          type: number
          format: int64
        is_hidden:
          type: boolean
    GroupCicFilter:
      type: object
      required:
        - min
        - max
        - direction
        - user_identity
      properties:
        min:
          type: number
          format: int64
          nullable: true
        max:
          type: number
          format: int64
          nullable: true
        user_identity:
          type: string
          minLength: 1
          maxLength: 200
          nullable: true
        direction:
          example: RECEIVED
          anyOf:
            - type: "null"
            - $ref: "#/components/schemas/GroupFilterDirection"
    GroupDescription:
      type: object
      required:
        - tdh
        - rep
        - cic
        - level
        - owns_nfts
        - identity_group_id
        - identity_group_identities_count
        - excluded_identity_group_id
        - excluded_identity_group_identities_count
      properties:
        tdh:
          $ref: "#/components/schemas/GroupTdhFilter"
        rep:
          $ref: "#/components/schemas/GroupRepFilter"
        cic:
          $ref: "#/components/schemas/GroupCicFilter"
        level:
          $ref: "#/components/schemas/GroupLevelFilter"
        owns_nfts:
          type: array
          items:
            $ref: "#/components/schemas/GroupOwnsNft"
        identity_group_id:
          type: string
          nullable: true
        identity_group_identities_count:
          type: number
          format: int64
          nullable: false
        excluded_identity_group_id:
          type: string
          nullable: true
        excluded_identity_group_identities_count:
          type: number
          format: int64
          nullable: false
    GroupFilterDirection:
      type: string
      enum:
        - RECEIVED
        - SENT
    GroupFull:
      type: object
      required:
        - id
        - name
        - group
        - created_at
        - created_by
        - visible
        - is_private
      properties:
        id:
          type: string
        name:
          type: string
        group:
          $ref: "#/components/schemas/GroupDescription"
        created_at:
          type: number
          format: int64
        created_by:
          $ref: "#/components/schemas/ProfileMin"
        visible:
          type: boolean
        is_private:
          type: boolean
    GroupLevelFilter:
      type: object
      required:
        - min
        - max
      properties:
        min:
          type: number
          format: int64
          nullable: true
        max:
          type: number
          format: int64
          nullable: true
    GroupOwnsNft:
      type: object
      required:
        - name
        - tokens
      properties:
        name:
          type: string
          enum:
            - MEMES
            - MEMELAB
            - NEXTGEN
            - GRADIENTS
        tokens:
          type: array
          items:
            type: string
    GroupRepFilter:
      type: object
      required:
        - min
        - max
        - category
        - direction
        - user_identity
      properties:
        min:
          type: number
          format: int64
          nullable: true
        max:
          type: number
          format: int64
          nullable: true
        category:
          type: string
          minLength: 1
          maxLength: 200
          nullable: true
        user_identity:
          type: string
          minLength: 1
          maxLength: 200
          nullable: true
        direction:
          example: RECEIVED
          anyOf:
            - type: "null"
            - $ref: "#/components/schemas/GroupFilterDirection"
    GroupTdhFilter:
      type: object
      required:
        - min
        - max
      properties:
        min:
          type: number
          minimum: 0
          format: int64
          nullable: true
        max:
          type: number
          minimum: 0
          format: int64
          nullable: true
    IdentityAndSubscriptionActions:
      type: object
      required:
        - identity
        - actions
      properties:
        identity:
          $ref: "#/components/schemas/ProfileMin"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/IdentitySubscriptionTargetAction"
    IdentitySubscriptionActions:
      type: object
      required:
        - actions
      properties:
        actions:
          type: array
          items:
            $ref: "#/components/schemas/IdentitySubscriptionTargetAction"
    IdentitySubscriptionTargetAction:
      type: string
      enum:
        - WAVE_CREATED
        - DROP_CREATED
        - DROP_REPLIED
        - DROP_VOTED
    IdentitySubscriptionTargetType:
      type: string
      enum:
        - PROFILE
        - WAVE
        - DROP
    IncomingIdentitySubscriptionsPage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/IdentityAndSubscriptionActions"
    IntRange:
      type: object
      required:
        - min
        - max
      properties:
        min:
          description: Included
          type: number
          format: int64
          nullable: true
        max:
          description: Included
          type: number
          format: int64
          nullable: true
    LoginRequest:
      type: object
      required:
        - client_signature
        - server_signature
      properties:
        client_signature:
          type: string
        server_signature:
          type: string
        role:
          type: string
    LoginResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    Nft:
      type: object
      required:
        - id
        - contract
        - mint_price
        - supply
        - name
        - collection
        - token_type
        - hodl_rate
        - description
        - artist
        - uri
        - thumbnail
        - image
        - animation
        - metadata
        - tdh
        - tdh__raw
        - tdh_rank
        - market_cap
        - floor_price
        - floor_price_from
        - scaled
        - compressed_animation
        - icon
        - total_volume_last_24_hours
        - total_volume_last_7_days
        - total_volume_last_1_month
        - total_volume
        - created_at
        - mint_date
        - boosted_tdh
        - artist_seize_handle
        - has_distribution
        - highest_offer
        - highest_offer_from
      properties:
        id:
          type: integer
          format: int64
        contract:
          type: string
        mint_price:
          type: number
          format: float
        supply:
          type: integer
          format: int64
        name:
          type: string
        collection:
          type: string
        token_type:
          type: string
          enum:
            - ERC1155
            - EEC721
        hodl_rate:
          type: number
          format: float
        description:
          type: string
        artist:
          type: string
        uri:
          type: string
          nullable: true
        thumbnail:
          type: string
        image:
          type: string
          nullable: true
        animation:
          type: string
          nullable: true
        metadata:
          type: object
        tdh:
          type: number
          format: int64
        tdh__raw:
          type: number
          format: int64
        tdh_rank:
          type: number
          format: int64
        market_cap:
          type: number
          format: float
        floor_price:
          type: number
          format: float
        floor_price_from:
          type: string
          nullable: true
        scaled:
          type: string
        compressed_animation:
          type: string
          nullable: true
        icon:
          type: string
        total_volume_last_24_hours:
          type: number
          format: float
        total_volume_last_7_days:
          type: number
          format: float
        total_volume_last_1_month:
          type: number
          format: float
        total_volume:
          type: number
          format: float
        created_at:
          type: string
          format: date-time
        mint_date:
          type: string
          format: date-time
        boosted_tdh:
          type: number
          format: int64
        artist_seize_handle:
          type: string
          nullable: true
        has_distribution:
          type: boolean
        highest_offer:
          type: number
          format: float
        highest_offer_from:
          type: string
          nullable: true
    NftOwner:
      type: object
      required:
        - created_at
        - updated_at
        - token_id
        - contract
        - balance
        - consolidation_key
      properties:
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        token_id:
          type: integer
          format: int64
        contract:
          type: string
        balance:
          type: integer
          format: int64
        consolidation_key:
          type: string
    NftOwnerPage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageWithNextUriBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/NftOwner"
    NftsPage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageWithNextUriBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Nft"
    NonceResponse:
      type: object
      required:
        - nonce
        - server_signature
      properties:
        nonce:
          type: string
        server_signature:
          type: string
    Notification:
      type: object
      required:
        - id
        - cause
        - created_at
        - read_at
        - related_identity
        - related_drops
        - additional_context
      properties:
        id:
          type: number
          format: int64
        cause:
          $ref: "#/components/schemas/NotificationCause"
        created_at:
          type: number
          format: int64
        read_at:
          type: number
          format: int64
          nullable: true
        related_identity:
          $ref: "#/components/schemas/ProfileMin"
        related_drops:
          type: array
          items:
            $ref: "#/components/schemas/Drop"
        additional_context:
          type: object
    NotificationCause:
      type: string
      enum:
        - IDENTITY_SUBSCRIBED
        - IDENTITY_MENTIONED
        - DROP_QUOTED
        - DROP_REPLIED
        - DROP_VOTED
    NotificationsResponse:
      type: object
      required:
        - notifications
        - unread_count
      properties:
        notifications:
          type: array
          items:
            $ref: "#/components/schemas/Notification"
        unread_count:
          type: number
          format: int64
    OutgoingIdentitySubscriptionsPage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TargetAndSubscriptionActions"
    OwnerBalance:
      type: object
      required:
        - consolidation_key
        - created_at
        - updated_at
        - total_balance
        - gradients_balance
        - nextgen_balance
        - memelab_balance
        - unique_memelab
        - memes_balance
        - unique_memes
        - genesis
        - nakamoto
        - memes_cards_sets
        - memes_cards_sets_minus1
        - memes_cards_sets_minus2
        - boost
        - boosted_tdh
        - boosted_memes_tdh
        - boosted_gradients_tdh
        - boosted_nextgen_tdh
        - total_balance_rank
        - memes_balance_rank
        - unique_memes_rank
        - gradients_balance_rank
        - nextgen_balance_rank
        - memelab_balance_rank
        - unique_memelab_rank
        - boosted_tdh_rank
        - boosted_memes_tdh_rank
        - boosted_gradients_tdh_rank
        - boosted_nextgen_tdh_rank
      properties:
        consolidation_key:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        total_balance:
          type: integer
          format: int64
        gradients_balance:
          type: integer
          format: int64
        nextgen_balance:
          type: integer
          format: int64
        memelab_balance:
          type: integer
          format: int64
        unique_memelab:
          type: integer
          format: int64
        memes_balance:
          type: integer
          format: int64
        unique_memes:
          type: integer
          format: int64
        genesis:
          type: integer
          format: int64
        nakamoto:
          type: integer
          format: int64
        memes_cards_sets:
          type: integer
          format: int64
        memes_cards_sets_minus1:
          type: integer
          format: int64
        memes_cards_sets_minus2:
          type: integer
          format: int64
        boost:
          type: number
          format: double
        boosted_tdh:
          type: integer
          format: int64
        boosted_memes_tdh:
          type: integer
          format: int64
        boosted_gradients_tdh:
          type: integer
          format: int64
        boosted_nextgen_tdh:
          type: integer
          format: int64
        total_balance_rank:
          type: integer
          format: int64
        memes_balance_rank:
          type: integer
          format: int64
        unique_memes_rank:
          type: integer
          format: int64
        gradients_balance_rank:
          type: integer
          format: int64
        nextgen_balance_rank:
          type: integer
          format: int64
        memelab_balance_rank:
          type: integer
          format: int64
        unique_memelab_rank:
          type: integer
          format: int64
        boosted_tdh_rank:
          type: integer
          format: int64
        boosted_memes_tdh_rank:
          type: integer
          format: int64
        boosted_gradients_tdh_rank:
          type: integer
          format: int64
        boosted_nextgen_tdh_rank:
          type: integer
          format: int64
    OwnerBalanceMemes:
      type: object
      required:
        - consolidation_key
        - created_at
        - updated_at
        - season
        - balance
        - unique
        - sets
        - boosted_tdh
        - rank
      properties:
        consolidation_key:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        season:
          type: integer
          format: int64
        balance:
          type: integer
          format: int64
        unique:
          type: integer
          format: int64
        sets:
          type: integer
          format: int64
        boosted_tdh:
          type: integer
          format: int64
        rank:
          type: integer
          format: int64
    OwnerBalancePage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageWithNextUriBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/OwnerBalance"
    PageBase:
      type: object
      required:
        - count
        - page
        - next
      properties:
        count:
          type: number
          format: int64
        page:
          type: number
          format: int64
        next:
          type: boolean
    PageWithNextUriBase:
      type: object
      required:
        - count
        - page
        - next
      properties:
        count:
          type: number
          format: int64
        page:
          type: number
          format: int64
        next:
          type: string
          nullable: true
    ProfileMin:
      type: object
      required:
        - id
        - handle
        - pfp
        - cic
        - rep
        - tdh
        - level
        - banner1_color
        - banner2_color
        - subscribed_actions
        - archived
      properties:
        id:
          type: string
          format: uuid
        handle:
          type: string
        pfp:
          type: string
          nullable: true
        banner1_color:
          type: string
          nullable: true
        banner2_color:
          type: string
          nullable: true
        cic:
          type: number
          format: int64
        rep:
          type: number
          format: int64
        tdh:
          type: number
          format: int64
        level:
          type: number
          format: int64
        subscribed_actions:
          type: array
          items:
            $ref: "#/components/schemas/IdentitySubscriptionTargetAction"
        archived:
          type: boolean
    ProfileProxy:
      type: object
      required:
        - id
        - granted_to
        - created_at
        - created_by
        - actions
      properties:
        id:
          type: string
        granted_to:
          $ref: "#/components/schemas/ProfileMin"
        created_at:
          type: number
        created_by:
          $ref: "#/components/schemas/ProfileMin"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ProfileProxyAction"
    ProfileProxyAction:
      type: object
      required:
        - id
        - proxy_id
        - action_type
        - credit_amount
        - credit_spent
        - start_time
        - end_time
        - accepted_at
        - rejected_at
        - revoked_at
        - created_at
        - is_active
      properties:
        id:
          type: string
        proxy_id:
          type: string
        action_type:
          $ref: "#/components/schemas/ProfileProxyActionType"
        credit_amount:
          anyOf:
            - type: "null"
            - type: number
              format: int64
          example: 1000
        credit_spent:
          anyOf:
            - type: "null"
            - type: number
              format: int64
          example: 1000
        start_time:
          type: number
          format: int64
          example: 1719850339996
        end_time:
          anyOf:
            - type: "null"
            - type: number
              format: int64
          example: 1719850339996
        created_at:
          type: number
          format: int64
          example: 1719850339996
        accepted_at:
          anyOf:
            - type: "null"
            - type: number
              format: int64
          example: 1719850339996
        rejected_at:
          anyOf:
            - type: "null"
            - type: number
              format: int64
          example: 1719850339996
        revoked_at:
          anyOf:
            - type: "null"
            - type: number
              format: int64
          example: 1719850339996
        is_active:
          type: boolean
    ProfileProxyActionType:
      type: string
      enum:
        - ALLOCATE_REP
        - ALLOCATE_CIC
        - CREATE_WAVE
        - READ_WAVE
        - CREATE_DROP_TO_WAVE
        - RATE_WAVE_DROP
    QuotedDrop:
      type: object
      required:
        - drop_id
        - drop_part_id
      properties:
        drop_id:
          type: string
        drop_part_id:
          type: number
          format: int64
    QuotedDropResponse:
      type: object
      required:
        - drop_id
        - drop_part_id
      properties:
        drop_id:
          type: string
        drop_part_id:
          type: number
          format: int64
        drop:
          $ref: "#/components/schemas/DropWithoutWave"
    RateMatter:
      type: string
      enum:
        - REP
        - CIC
    RatingWithProfileInfoAndLevel:
      type: object
      required:
        - profile_id
        - handle
        - wallets
        - tdh
        - rating
        - cic
        - last_modified
        - level
      properties:
        profile_id:
          type: string
        handle:
          type: string
        wallets:
          type: array
          items:
            type: string
        tdh:
          type: number
          format: int64
        rating:
          type: number
          format: int64
        cic:
          type: number
          format: int64
        last_modified:
          type: string
    RatingWithProfileInfoAndLevelPage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/RatingWithProfileInfoAndLevel"
    RegisterPushNotificationTokenRequest:
      type: object
      required:
        - device_id
        - token
      properties:
        device_id:
          type: string
        token:
          type: string
        profile_id:
          type: string
          description: Optional profile_id
        platform:
          type: string
          description: Optional platform (ios, android, web)
    ReplyToDrop:
      type: object
      required:
        - drop_id
        - drop_part_id
      properties:
        drop_id:
          type: string
        drop_part_id:
          type: number
          format: int64
    ReplyToDropResponse:
      type: object
      required:
        - drop_id
        - drop_part_id
        - is_deleted
      properties:
        drop_id:
          type: string
        drop_part_id:
          type: number
          format: int64
        is_deleted:
          type: boolean
        drop:
          $ref: "#/components/schemas/DropWithoutWave"
    RepRating:
      type: object
      required:
        - rating
      properties:
        rating:
          type: number
          format: int64
    SeizeSettings:
      type: object
      required:
        - rememes_submission_tdh_threshold
      properties:
        rememes_submission_tdh_threshold:
          type: integer
          format: int64
    TargetAndSubscriptionActions:
      type: object
      required:
        - target
        - actions
      properties:
        target:
          description: Wave or drop or identity
          type: object
        actions:
          type: array
          items:
            $ref: "#/components/schemas/IdentitySubscriptionTargetAction"
    Transaction:
      type: object
      required:
        - transaction
        - block
        - created_at
        - transaction_date
        - from_address
        - to_address
        - contract
        - token_id
        - token_count
        - value
        - royalties
        - gas_gwei
        - gas_price
        - gas_price_gwei
        - gas
        - primary_proceeds
        - eth_price_usd
        - value_usd
        - gas_usd
        - from_display
        - to_display
      properties:
        transaction:
          type: string
        block:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
        transaction_date:
          type: string
          format: date-time
        from_address:
          type: string
        to_address:
          type: string
        contract:
          type: string
        token_id:
          type: integer
          format: int64
        token_count:
          type: integer
          format: int64
        value:
          type: number
          format: double
        royalties:
          type: number
          format: double
        gas_gwei:
          type: number
          format: double
        gas_price:
          type: number
          format: double
        gas_price_gwei:
          type: number
          format: double
        gas:
          type: number
          format: double
        primary_proceeds:
          type: number
          format: double
        eth_price_usd:
          type: number
          format: double
        value_usd:
          type: number
          format: double
        gas_usd:
          type: number
          format: double
        from_display:
          type: string
          nullable: true
        to_display:
          type: string
    TransactionPage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageWithNextUriBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"
    UpdateDropRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/CreateWaveDropRequest"
    UpdateProxyActionRequest:
      type: object
      properties:
        credit_amount:
          type: number
          format: int64
          example: 1000
        end_time:
          type: number
          format: int64
          nullable: true
          example: 1719850339996
    UpdateWaveRequest:
      type: object
      required:
        - name
        - picture
        - voting
        - visibility
        - participation
        - wave
        - outcomes
      properties:
        name:
          description: The name of the wave
          type: string
          maxLength: 250
        picture:
          description: The picture of the wave
          type: string
          example: https://example.com/picture.jpg
          nullable: true
        voting:
          $ref: "#/components/schemas/CreateNewWaveVotingConfig"
        visibility:
          $ref: "#/components/schemas/CreateNewWaveVisibilityConfig"
        participation:
          $ref: "#/components/schemas/CreateNewWaveParticipationConfig"
        wave:
          $ref: "#/components/schemas/CreateWaveConfig"
        outcomes:
          type: array
          items:
            $ref: "#/components/schemas/WaveOutcome"
    UploadItem:
      type: object
      required:
        - date
        - block
        - url
      properties:
        date:
          type: string
          format: date-time
        block:
          type: integer
          format: int64
        url:
          type: string
    UploadsPage:
      type: object
      required:
        - data
      allOf:
        - $ref: "#/components/schemas/PageWithNextUriBase"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/UploadItem"
    Wave:
      type: object
      required:
        - id
        - serial_no
        - author
        - name
        - picture
        - description_drop
        - voting
        - visibility
        - participation
        - wave
        - outcomes
        - created_at
        - contributors_overview
        - subscribed_actions
        - metrics
      properties:
        id:
          description: The ID of the wave
          type: string
        serial_no:
          description: Sequence number of the wave in Seize
          type: number
          format: int64
        author:
          $ref: "#/components/schemas/ProfileMin"
        name:
          description: The name of the wave
          type: string
        picture:
          description: The picture of the wave
          type: string
          example: https://example.com/picture.jpg
          nullable: true
        created_at:
          type: number
          format: int64
        description_drop:
          $ref: "#/components/schemas/Drop"
        voting:
          $ref: "#/components/schemas/WaveVotingConfig"
        visibility:
          $ref: "#/components/schemas/WaveVisibilityConfig"
        participation:
          $ref: "#/components/schemas/WaveParticipationConfig"
        wave:
          $ref: "#/components/schemas/WaveConfig"
        outcomes:
          type: array
          items:
            $ref: "#/components/schemas/WaveOutcome"
        contributors_overview:
          type: array
          items:
            $ref: "#/components/schemas/WaveContributorOverview"
        subscribed_actions:
          type: array
          items:
            $ref: "#/components/schemas/WaveSubscriptionTargetAction"
        metrics:
          $ref: "#/components/schemas/WaveMetrics"
    WaveConfig:
      type: object
      required:
        - type
        - time_lock_ms
        - winning_thresholds
        - period
        - max_winners
        - admin_group
        - authenticated_user_eligible_for_admin
      properties:
        type:
          $ref: "#/components/schemas/WaveType"
        winning_thresholds:
          description: >-
            Drops which rate tally ends up in this range will win. Must be set
            if and only if type is APPROVE
          anyOf:
            - type: "null"
            - $ref: "#/components/schemas/IntRange"
        max_winners:
          description: >-
            This amount of top rated drops will win. Must be set if and only if
            type is RANK
          type: integer
          format: int64
          minimum: 1
          nullable: true
        time_lock_ms:
          nullable: true
          description: >-
            Vote of a voter is considered eligible after this amount of time
            after casting it. If not set then votes are eligible immediately
            after casting.
          type: integer
          format: int64
          minimum: 1
        admin_group:
          $ref: "#/components/schemas/WaveScope"
        period:
          anyOf:
            - type: "null"
            - $ref: "#/components/schemas/IntRange"
          example:
            min: 1719850339996
            max: 1719850339996
        authenticated_user_eligible_for_admin:
          type: boolean
    WaveContributorOverview:
      required:
        - contributor_identity
        - contributor_pfp
      properties:
        contributor_identity:
          type: string
        contributor_pfp:
          type: string
    WaveCreditScope:
      description: >
        The scope of the credit. 

        * WAVE - Credit is spendable across all drops in wave. 

        * DROP - The amount of votes, voter can give to a drop is not affected
        by votes spent on other drops. 

        * PARTICIPANT: The amount of votes, voter can give to a drop by concrete
        participant is only affected by voted given by same user to other drops
        by the same participant.
      enum:
        - WAVE
        - DROP
        - PARTICIPANT
    WaveCreditType:
      type: string
      description: |
        What will be counted as a credit. UNIQUE means each voter gets one vote.
      enum:
        - TDH
        - REP
        - UNIQUE
    WaveDropsFeed:
      type: object
      required:
        - wave
        - drops
      properties:
        wave:
          $ref: "#/components/schemas/WaveMin"
        drops:
          type: array
          items:
            $ref: "#/components/schemas/DropWithoutWave"
        root_drop:
          $ref: "#/components/schemas/DropWithoutWave"
        trace:
          type: array
          items:
            $ref: "#/components/schemas/DropTraceItem"
    WaveMetadataType:
      type: string
      enum:
        - STRING
        - NUMBER
    WaveMetrics:
      required:
        - subscribers_count
        - drops_count
        - latest_drop_timestamp
      properties:
        subscribers_count:
          type: number
          format: int64
        drops_count:
          type: number
          format: int64
        latest_drop_timestamp:
          type: number
          format: int64
        your_drops_count:
          type: number
          format: int64
        your_latest_drop_timestamp:
          type: number
          format: int64
    WaveMin:
      required:
        - id
        - name
        - picture
        - description_drop_id
        - authenticated_user_eligible_to_vote
        - authenticated_user_eligible_to_participate
      properties:
        id:
          type: string
        name:
          type: string
        picture:
          type: string
        description_drop_id:
          type: string
        authenticated_user_eligible_to_vote:
          type: boolean
        authenticated_user_eligible_to_participate:
          type: boolean
    WaveOutcome:
      type: object
      required:
        - type
        - description
      properties:
        type:
          $ref: "#/components/schemas/WaveOutcomeType"
        subtype:
          $ref: "#/components/schemas/WaveOutcomeSubType"
        description:
          type: string
        credit:
          $ref: "#/components/schemas/WaveOutcomeCredit"
        rep_category:
          type: string
        amount:
          type: number
          format: int64
        distribution:
          type: array
          items:
            type: number
    WaveOutcomeCredit:
      type: string
      enum:
        - REP
        - CIC
    WaveOutcomeSubType:
      type: string
      enum:
        - CREDIT_DISTRIBUTION
    WaveOutcomeType:
      type: string
      enum:
        - AUTOMATIC
        - MANUAL
    WaveParticipationConfig:
      type: object
      required:
        - scope
        - required_metadata
        - signature_required
        - no_of_applications_allowed_per_participant
        - required_media
        - authenticated_user_eligible
      properties:
        scope:
          $ref: "#/components/schemas/WaveScope"
        no_of_applications_allowed_per_participant:
          description: >-
            The number of applications allowed per participant. Infinite if
            omitted.
          type: integer
          format: int64
          minimum: 1
          nullable: true
        required_metadata:
          description: |
            The metadata that must be provided by the participant. 
            Empty array if nothing is required.
          type: array
          items:
            $ref: "#/components/schemas/WaveRequiredMetadata"
        required_media:
          type: array
          items:
            $ref: "#/components/schemas/WaveParticipationRequirement"
        signature_required:
          description: If true then the votes must be signed by voters.
          type: boolean
        period:
          $ref: "#/components/schemas/IntRange"
        authenticated_user_eligible:
          type: boolean
    WaveParticipationRequirement:
      type: string
      enum:
        - IMAGE
        - AUDIO
        - VIDEO
    WaveRequiredMetadata:
      type: object
      required:
        - name
        - type
      properties:
        name:
          description: Metadata key
          type: string
        type:
          $ref: "#/components/schemas/WaveMetadataType"
    WaveScope:
      title: Scope
      description: A scope of audience
      type: object
      required:
        - group
      properties:
        group:
          description: If null, everyone is included
          anyOf:
            - type: "null"
            - $ref: "#/components/schemas/Group"
    WavesOverviewType:
      type: string
      enum:
        - LATEST
        - MOST_SUBSCRIBED
        - HIGH_LEVEL_AUTHOR
        - AUTHOR_YOU_HAVE_REPPED
        - MOST_DROPPED
        - MOST_DROPPED_BY_YOU
        - RECENTLY_DROPPED_TO
        - RECENTLY_DROPPED_TO_BY_YOU
    WaveSubscriptionActions:
      type: object
      required:
        - actions
      properties:
        actions:
          type: array
          items:
            $ref: "#/components/schemas/WaveSubscriptionTargetAction"
    WaveSubscriptionTargetAction:
      type: string
      enum:
        - DROP_CREATED
    WaveType:
      type: string
      enum:
        - APPROVE
        - RANK
        - CHAT
    WaveVisibilityConfig:
      type: object
      required:
        - scope
      properties:
        scope:
          $ref: "#/components/schemas/WaveScope"
    WaveVotingConfig:
      type: object
      required:
        - scope
        - credit_type
        - credit_scope
        - credit_category
        - signature_required
        - creditor
        - authenticated_user_eligible
      properties:
        scope:
          $ref: "#/components/schemas/WaveScope"
        credit_type:
          $ref: "#/components/schemas/WaveCreditType"
        credit_scope:
          $ref: "#/components/schemas/WaveCreditScope"
        credit_category:
          description: >-
            Only relevant when credit_type=REP. The REP category which is usable
            as credit. If not set then all categories will be usable as voting
            credits.
          type: string
          nullable: true
        creditor:
          description: Only relevant when credit_type=REP
          anyOf:
            - type: "null"
            - $ref: "#/components/schemas/ProfileMin"
        signature_required:
          description: If true then the votes must be signed by voters.
          type: boolean
        period:
          $ref: "#/components/schemas/IntRange"
        authenticated_user_eligible:
          type: boolean
security:
  - bearerAuth: []
